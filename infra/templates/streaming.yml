AWSTemplateFormatVersion: '2010-09-09'
Description: CDC and Streaming Pipeline for the Data Master Project

Resources:

  KinesisStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: dm-cdc-stream
      StreamModeDetails:
        StreamMode: ON_DEMAND
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Streaming

  FirehoseDeliveryStream:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: dm-firehose-stream
      DeliveryStreamType: KinesisStreamAsSource
      KinesisStreamSourceConfiguration:
        KinesisStreamARN: !GetAtt KinesisStream.Arn
        RoleARN: !ImportValue dm-firehose-role-arn
      ExtendedS3DestinationConfiguration:
        BucketARN:
          Fn::Sub:
            - "arn:aws:s3:::${Bucket}"
            - Bucket: !ImportValue dm-stage-bucket
        Prefix: streaming/
        CompressionFormat: UNCOMPRESSED
        DataFormatConversionConfiguration:
          Enabled: true
          InputFormatConfiguration:
            Deserializer:
              OpenXJsonSerDe: {}
          OutputFormatConfiguration:
            Serializer:
              ParquetSerDe:
                Compression: GZIP
          SchemaConfiguration:
            DatabaseName: "dm_catalog"
            TableName: "firehose_stream"
            RoleARN: !ImportValue dm-firehose-role-arn
        RoleARN: !ImportValue dm-firehose-role-arn
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Streaming

  DMSSourceEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointIdentifier: dm-source-endpoint
      EndpointType: source
      EngineName: postgres
      ServerName: !ImportValue dm-db-writer-endpoint
      Port: !ImportValue dm-db-port
      DatabaseName: !ImportValue dm-db-name
      Username: !Join ["", ["{{resolve:secretsmanager:", !ImportValue dm-db-secret-arn, ":SecretString:username}}"]]
      Password: !Join ["", ["{{resolve:secretsmanager:", !ImportValue dm-db-secret-arn, ":SecretString:password}}"]]
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Streaming

  DMSTargetEndpoint:
    Type: AWS::DMS::Endpoint
    Properties:
      EndpointIdentifier: dm-kinesis-endpoint
      EndpointType: target
      EngineName: kinesis
      KinesisSettings:
        MessageFormat: json
        StreamArn: !GetAtt KinesisStream.Arn
        ServiceAccessRoleArn: !ImportValue dm-firehose-role-arn
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Streaming

  DMSReplicationConfig:
    Type: AWS::DMS::ReplicationConfig
    Properties:
      ReplicationConfigIdentifier: dm-cdc-config
      ReplicationType: cdc
      SourceEndpointArn: !Ref DMSSourceEndpoint
      TargetEndpointArn: !Ref DMSTargetEndpoint
      ComputeConfig:
        MinCapacityUnits: 2
        MaxCapacityUnits: 4
      TableMappings:
        rules:
          - rule-type: selection
            rule-id: "1"
            rule-name: "1"
            object-locator:
              schema-name: dm
              table-name: "%"
            rule-action: include
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Streaming

Outputs:

  KinesisStreamArn:
    Description: Kinesis Stream ARN
    Value: !GetAtt KinesisStream.Arn
    Export:
      Name: dm-kinesis-stream-arn

  DMSReplicationConfigId:
    Description: DMS Serverless Replication Config ID
    Value: !Ref DMSReplicationConfig
    Export:
      Name: dm-dms-replication-config-id
