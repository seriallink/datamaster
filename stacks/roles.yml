AWSTemplateFormatVersion: '2010-09-09'
Description: IAM Roles for the Data Master Project

Resources:

  DMSVpcRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dms-vpc-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole
      Policies:
        - PolicyName: dm-dms-vpc-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowAssumeKinesisRole
                Effect: Allow
                Action: sts:AssumeRole
                Resource: arn:aws:iam::833222420550:role/dm-kinesis-role
              - Sid: AllowCloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/dms/*
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  PipeExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-pipe-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-pipe-kinesis-to-firehose-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:DescribeStream
                  - kinesis:ListShards
                Resource: "*"
              - Effect: Allow
                Action:
                  - firehose:PutRecord
                  - firehose:PutRecordBatch
                Resource: "*"
      Tags:
        - Key: Name
          Value: dm-pipe-execution-role
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  KinesisAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-kinesis-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-kinesis-access-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  FirehoseAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-firehose-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
                - dms.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-firehose-access-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:DescribeStream
                  - kinesis:ListStreams
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - glue:GetTable
                  - glue:GetTableVersion
                  - glue:GetTableVersions
                  - lambda:InvokeFunction
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-lambda-execution-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - firehose:PutRecord
                  - firehose:PutRecordBatch
                Resource: arn:aws:firehose:*:*:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: arn:aws:s3:::dm-*/*


  GlueServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-glue-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: dm-glue-service-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: glue:*
                Resource: "*"
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: "*"
              - Effect: Allow
                Action: logs:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource: "*"
              - Effect: Allow
                Action: iam:PassRole
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  LakeFormationAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-lakeformation-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lakeformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin
      Policies:
        - PolicyName: dm-allow-s3-access-to-datalake-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  EMRServerlessExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-emr-batch-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: emr-serverless.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-emr-access-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - glue:*
                  - logs:*
                Resource: '*'
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  FirehoseProcessorFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-firehose-processor-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-firehose-processor-logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  ProcessingControllerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-processing-controller-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-processing-controller-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource: "*"

  ValidateContractRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-validate-contract-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: dm-validate-contract-access-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - glue:GetTable
                  - s3:GetObject
                Resource: '*'

  ProcessingEventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-processing-event-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-processing-event-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !GetAtt ProcessingControllerFunctionRole.Arn

  BatchETLStepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-batch-sfn-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-batch-step-function-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - emr-serverless:StartJobRun
                  - emr-serverless:GetJobRun
                  - lambda:InvokeFunction
                  - iam:PassRole
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:*
                Resource: '*'
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  EMRProcessingExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-processing-emr-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: emr-serverless.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-emr-processing-execution-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:*
                  - glue:*
                  - logs:*
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  ProcessingStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-processing-sfn-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-processing-step-function-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - emr-serverless:StartJobRun
                  - emr-serverless:GetJobRun
                  - iam:PassRole
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:*
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  GrafanaServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-grafana-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: grafana.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

Outputs:

  DMSVpcRoleArn:
    Description: Role for DMS VPC access
    Value: !GetAtt DMSVpcRole.Arn
    Export:
      Name: dm-dms-vpc-role-arn

  KinesisRoleArn:
    Description: Role for DMS to write to Kinesis
    Value: !GetAtt KinesisAccessRole.Arn
    Export:
      Name: dm-kinesis-role-arn

  PipeExecutionRoleArn:
    Description: Role for EventBridge Pipe to write to Firehose
    Value: !GetAtt PipeExecutionRole.Arn
    Export:
      Name: dm-pipe-execution-role-arn

  FirehoseRoleArn:
    Description: Role used by Firehose and DMS target endpoint
    Value: !GetAtt FirehoseAccessRole.Arn
    Export:
      Name: dm-firehose-role-arn

  LambdaExecutionRoleArn:
    Description: ARN of the IAM role used by Lambda functions
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: dm-lambda-role-arn

  GlueServiceRoleArn:
    Description: Glue crawler execution role
    Value: !GetAtt GlueServiceRole.Arn
    Export:
      Name: dm-glue-role-arn

  LakeFormationRoleArn:
    Description: Lake Formation registration and access role
    Value: !GetAtt LakeFormationAccessRole.Arn
    Export:
      Name: dm-lakeformation-role-arn

  EMRBatchRoleArn:
    Description: Role used by EMR Serverless for batch workloads
    Value: !GetAtt EMRServerlessExecutionRole.Arn
    Export:
      Name: dm-emr-batch-role-arn

  FirehoseProcessorFunctionRoleArn:
    Description: ARN of the IAM role used by the Firehose processor Lambda function
    Value: !GetAtt FirehoseProcessorFunctionRole.Arn
    Export:
      Name: dm-firehose-processor-role-arn

  ProcessingControllerRoleArn:
    Description: IAM role assumed by Lambda functions to write processing control records into DynamoDB
    Value: !GetAtt ProcessingControllerFunctionRole.Arn
    Export:
      Name: dm-processing-controller-role-arn

  ProcessingEventRoleArn:
    Description: IAM role used by EventBridge to trigger the dm-processing-controller Lambda function
    Value: !GetAtt ProcessingEventRole.Arn
    Export:
      Name: dm-processing-event-role-arn

  ValidateContractFunctionRoleArn:
    Description: Lambda role for contract validation
    Value: !GetAtt ValidateContractRole.Arn
    Export:
      Name: dm-validate-contract-role-arn

  BatchStepFunctionRoleArn:
    Description: IAM role for Step Function in batch pipeline
    Value: !GetAtt BatchETLStepFunctionRole.Arn
    Export:
      Name: dm-batch-sfn-role-arn

  EMRProcessingRoleArn:
    Description: Role for EMR Serverless in processing pipeline
    Value: !GetAtt EMRProcessingExecutionRole.Arn
    Export:
      Name: dm-processing-emr-role-arn

  ProcessingStepFunctionRoleArn:
    Description: Step Function role for data processing pipeline
    Value: !GetAtt ProcessingStateMachineRole.Arn
    Export:
      Name: dm-processing-sfn-role-arn

  GrafanaServiceRoleArn:
    Description: IAM role used by Amazon Managed Grafana
    Value: !GetAtt GrafanaServiceRole.Arn
    Export:
      Name: dm-grafana-role-arn
