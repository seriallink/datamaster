AWSTemplateFormatVersion: '2010-09-09'
Description: IAM Roles for the Data Master Project

Resources:

  DMSVpcRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dms-vpc-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole
      Policies:
        - PolicyName: dm-dms-vpc-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowAssumeKinesisRole
                Effect: Allow
                Action: sts:AssumeRole
                Resource: arn:aws:iam::833222420550:role/dm-kinesis-role
              - Sid: AllowCloudWatchLogs
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:log-group:/aws/dms/*
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  PipeExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-pipe-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: pipes.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-pipe-execution-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:DescribeStream
                  - kinesis:ListShards
                Resource: "*"
              - Effect: Allow
                Action:
                  - firehose:PutRecord
                  - firehose:PutRecordBatch
                Resource: "*"
              - Effect: Allow
                Action:
                  - states:StartExecution
                  - states:StartSyncExecution
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:DescribeStream
                  - dynamodb:GetRecords
                  - dynamodb:GetShardIterator
                  - dynamodb:ListStreams
                Resource: "*"
      Tags:
        - Key: Name
          Value: dm-pipe-execution-role
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles


  KinesisAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-kinesis-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: dms.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-kinesis-access-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - kinesis:DescribeStream
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  FirehoseAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-firehose-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
                - dms.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-firehose-access-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:ListBucket
                  - kinesis:GetRecords
                  - kinesis:GetShardIterator
                  - kinesis:DescribeStream
                  - kinesis:ListStreams
                  - kinesis:PutRecord
                  - kinesis:PutRecords
                  - glue:GetTable
                  - glue:GetTableVersion
                  - glue:GetTableVersions
                  - lambda:InvokeFunction
                Resource: "*"
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Resource: !ImportValue dm-raw-kms-key-arn
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-lambda-execution-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - firehose:PutRecord
                  - firehose:PutRecordBatch
                Resource: arn:aws:firehose:*:*:*
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource: arn:aws:s3:::dm-*/*

  GlueServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-glue-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: glue.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole
      Policies:
        - PolicyName: dm-glue-service-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: glue:*
                Resource: "*"
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: "*"
              - Effect: Allow
                Action: logs:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource: "*"
              - Effect: Allow
                Action: iam:PassRole
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  LakeFormationAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-lakeformation-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lakeformation.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLakeFormationDataAdmin
      Policies:
        - PolicyName: dm-allow-s3-access-to-datalake-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                  - s3:GetObject
                  - s3:PutObject
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  FirehoseRouterFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-firehose-router-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-firehose-router-logs
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"

  ProcessingControllerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-processing-controller-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-processing-controller-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                Resource: "*"
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                Resource: !ImportValue dm-raw-kms-key-arn

  ProcessingControllerEventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-processing-controller-event-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-processing-controller-event-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  !GetAtt ProcessingControllerFunctionRole.Arn

  WorkerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-worker-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
                - glue.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-worker-policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "*"
              - Effect: Allow
                Action:
                  - comprehend:DetectPiiEntities
                Resource: "*"
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:Encrypt
                  - kms:GenerateDataKey
                Resource: !ImportValue dm-raw-kms-key-arn

  StepFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-step-function-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: dm-step-function-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecs:RunTask
                  - emr-serverless:StartJobRun
                  - emr-serverless:GetJobRun
                  - emr-serverless:CancelJobRun
                  - events:DescribeRule
                  - events:PutRule
                  - events:PutTargets
                  - iam:PassRole
                  - glue:StartJobRun
                  - lambda:InvokeFunction
                  - logs:*
                Resource: "*"
      Tags:
        - Key: Name
          Value: dm-step-function-role
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-task-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  EmrServerlessExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-emr-execution-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: emr-serverless.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: dm-emr-serverless-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:DeleteObject
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:BatchGetItem
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                Resource: "*"
              - Effect: Allow
                Action:
                  - glue:GetDatabase
                  - glue:GetTable
                  - glue:GetTables
                  - glue:CreateTable
                  - glue:UpdateTable
                  - glue:DeleteTable
                  - glue:BatchCreatePartition
                  - glue:GetPartition
                  - glue:GetPartitions
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

  GrafanaAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: dm-grafana-access-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: grafana.amazonaws.com
            Action: sts:AssumeRole
      Description: IAM role for AWS Managed Grafana to access Athena, Glue and CloudWatch
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonAthenaFullAccess
        - arn:aws:iam::aws:policy/AWSGlueConsoleFullAccess
        - arn:aws:iam::aws:policy/CloudWatchReadOnlyAccess
      Policies:
        - PolicyName: dm-grafana-access-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: AllowS3AccessToAthenaResults
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:AbortMultipartUpload
                  - s3:ListBucket
                Resource: "*"
              - Sid: AllowCloudWatchMetrics
                Effect: Allow
                Action:
                  - cloudwatch:GetMetricData
                  - cloudwatch:ListMetrics
                  - cloudwatch:GetMetricStatistics
                Resource: "*"
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Roles

Outputs:

  DMSVpcRoleArn:
    Description: Role for DMS VPC access
    Value: !GetAtt DMSVpcRole.Arn
    Export:
      Name: dm-dms-vpc-role-arn

  KinesisRoleArn:
    Description: Role for DMS to write to Kinesis
    Value: !GetAtt KinesisAccessRole.Arn
    Export:
      Name: dm-kinesis-role-arn

  PipeExecutionRoleArn:
    Description: Role for EventBridge Pipe to write to Firehose
    Value: !GetAtt PipeExecutionRole.Arn
    Export:
      Name: dm-pipe-execution-role-arn

  FirehoseRoleArn:
    Description: Role used by Firehose and DMS target endpoint
    Value: !GetAtt FirehoseAccessRole.Arn
    Export:
      Name: dm-firehose-role-arn

  LambdaExecutionRoleArn:
    Description: ARN of the IAM role used by Lambda functions
    Value: !GetAtt LambdaExecutionRole.Arn
    Export:
      Name: dm-lambda-role-arn

  GlueServiceRoleArn:
    Description: Glue crawler execution role
    Value: !GetAtt GlueServiceRole.Arn
    Export:
      Name: dm-glue-role-arn

  LakeFormationRoleArn:
    Description: Lake Formation registration and access role
    Value: !GetAtt LakeFormationAccessRole.Arn
    Export:
      Name: dm-lakeformation-role-arn

  FirehoseRouterFunctionRoleArn:
    Description: ARN of the IAM role used by the Firehose processor Lambda function
    Value: !GetAtt FirehoseRouterFunctionRole.Arn
    Export:
      Name: dm-firehose-router-role-arn

  ProcessingControllerFunctionRoleArn:
    Description: IAM role assumed by Lambda functions to write processing control records into DynamoDB
    Value: !GetAtt ProcessingControllerFunctionRole.Arn
    Export:
      Name: dm-processing-controller-function-role-arn

  ProcessingControllerEventRoleArn:
    Description: IAM role used by EventBridge to trigger the dm-processing-controller Lambda function
    Value: !GetAtt ProcessingControllerEventRole.Arn
    Export:
      Name: dm-processing-controller-event-role-arn

  WorkerRoleArn:
    Description: ARN of the IAM role assumed by the raw ingestor workers (Lambda or ECS)
    Value: !GetAtt WorkerRole.Arn
    Export:
      Name: dm-worker-role-arn

  StepFunctionRoleArn:
    Description: IAM Role used by Step Functions to invoke Lambda functions, ECS tasks or Glue jobs
    Value: !GetAtt StepFunctionRole.Arn
    Export:
      Name: dm-step-function-role-arn

  TaskExecutionRoleArn:
    Description: ECS Fargate execution role for pulling images and writing logs
    Value: !GetAtt TaskExecutionRole.Arn
    Export:
      Name: dm-task-execution-role-arn

  EmrServerlessExecutionRoleArn:
    Description: ARN of the EMR Serverless Execution Role
    Value: !GetAtt EmrServerlessExecutionRole.Arn
    Export:
      Name: dm-emr-execution-role-arn

  GrafanaAccessRoleArn:
    Description: ARN of the IAM role for AWS Managed Grafana
    Value: !GetAtt GrafanaAccessRole.Arn
    Export:
      Name: dm-grafana-access-role-arn
