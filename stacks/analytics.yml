AWSTemplateFormatVersion: "2010-09-09"
Description: Analytics Pipeline for the Data Master Project

Resources:

  AnalyticsApp:
    Type: AWS::EMRServerless::Application
    Properties:
      Name: dm-analytics-app
      ReleaseLabel: emr-7.9.0
      Type: Spark
      Architecture: ARM64
      AutoStartConfiguration:
        Enabled: true
      AutoStopConfiguration:
        Enabled: true
        IdleTimeoutMinutes: 10
      MaximumCapacity:
        Cpu: "8 vCPU"
        Memory: "32 GB"
      NetworkConfiguration:
        SubnetIds:
          - !ImportValue dm-public-subnet-az1-id
          - !ImportValue dm-public-subnet-az2-id
        SecurityGroupIds:
          - !ImportValue dm-processing-sg
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Analytics

  AnalyticsLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/stepfunctions/dm-analytics-dispatcher
      RetentionInDays: 7

  AnalyticsDispatcher:
    Type: AWS::StepFunctions::StateMachine
    DependsOn: AnalyticsLogGroup
    Properties:
      StateMachineName: dm-analytics-dispatcher
      RoleArn: !ImportValue dm-step-function-role-arn
      LoggingConfiguration:
        Level: ALL
        IncludeExecutionData: true
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt AnalyticsLogGroup.Arn
      DefinitionSubstitutions:
        AppId: !Ref AnalyticsApp
        ExecutionRole: !ImportValue dm-emr-execution-role-arn
        ArtifactsBucket: !ImportValue dm-artifacts-bucket
        ObserverBucket: !ImportValue dm-observer-bucket
      DefinitionString: !Sub
        - |
          {
            "Comment": "Fan-out gold processing by table",
            "TimeoutSeconds": 1800,
            "StartAt": "ProcessTables",
            "States": {
              "ProcessTables": {
                "Type": "Map",
                "ItemsPath": "$.tables",
                "MaxConcurrency": 1,
                "Parameters": {
                  "table.$": "$$.Map.Item.Value"
                },
                "Iterator": {
                  "StartAt": "RunEMRJob",
                  "States": {
                    "RunEMRJob": {
                      "Type": "Task",
                      "Resource": "arn:aws:states:::emr-serverless:startJobRun.sync",
                      "TimeoutSeconds": 900,
                      "Parameters": {
                        "ApplicationId": "${AppId}",
                        "ExecutionRoleArn": "${ExecutionRole}",
                        "JobDriver": {
                          "SparkSubmit": {
                            "EntryPoint": "s3://${ArtifactsBucket}/etl/main.py",
                            "SparkSubmitParameters": "--py-files s3://${ArtifactsBucket}/etl/bundle.zip",
                            "EntryPointArguments.$": "States.Array('--layer', 'gold', '--table', $.table)"
                          }
                        },
                        "ConfigurationOverrides": {
                          "MonitoringConfiguration": {
                            "S3MonitoringConfiguration": {
                              "LogUri": "s3://${ObserverBucket}/etl/logs/"
                            }
                          }
                        }
                      },
                      "Catch": [
                        {
                          "ErrorEquals": ["States.ALL"],
                          "ResultPath": "$.error",
                          "Next": "FailJob"
                        }
                      ],
                      "End": true
                    },
                    "FailJob": {
                      "Type": "Fail",
                      "Error": "EMRJobFailed",
                      "Cause": "EMR Serverless job failed inside Map.Iterator"
                    }
                  }
                },
                "ResultPath": "$.map",
                "End": true
              }
            }
          }
        - {
          AppId: !Ref AnalyticsApp,
          ExecutionRole: !ImportValue dm-emr-execution-role-arn,
          ArtifactsBucket: !ImportValue dm-artifacts-bucket,
          ObserverBucket: !ImportValue dm-observer-bucket
        }
      Tags:
        - Key: Project
          Value: DataMaster
        - Key: Component
          Value: Analytics

  AnalyticsCronRule:
    Type: AWS::Events::Rule
    Properties:
      Name: dm-analytics-cron
      ScheduleExpression: cron(0 7 * * ? *)  # 7h UTC daily
      State: ENABLED
      Targets:
        - Arn: !Ref AnalyticsDispatcher
          Id: StepFunctionTarget
          RoleArn: !ImportValue dm-pipe-execution-role-arn
          Input: |
            {
              "tables": [
                "top_beers_by_rating",
                "top_breweries_by_rating",
                "state_by_review_volume",
                "top_styles_by_popularity",
                "top_drinkers"
              ]
            }

Outputs:

  AnalyticsAppId:
    Description: EMR Serverless Application ID
    Value: !Ref AnalyticsApp
    Export:
      Name: dm-emr-analytics-id

  AnalyticsDispatcherArn:
    Description: ARN of the Step Function dispatcher
    Value: !Ref AnalyticsDispatcher
    Export:
      Name: dm-analytics-dispatcher-
